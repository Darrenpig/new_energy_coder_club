[tool.poetry]
name = "ai-project-template"
version = "0.1.0"
description = "标准AI项目模板 - NEC新能源极客俱乐部"
authors = ["NEC AI Team <ai-team@nec-club.org>"]
readme = "README.md"
license = "MIT"

[tool.poetry.dependencies]
python = "^3.10"
numpy = "^1.24.0"
pandas = "^2.0.0"
matplotlib = "^3.7.0"
scikit-learn = "^1.2.0"
torch = "^2.0.0"
torchvision = "^0.15.0"
torchaudio = "^2.0.0"
pymodbus = "^3.3.0"
pyserial = "^3.5"
opencv-python = "^4.7.0"
plotly = "^5.14.0"
fastapi = "^0.95.0"
uvicorn = "^0.21.0"
websockets = "^11.0.0"
python-dotenv = "^1.0.0"
tqdm = "^4.65.0"
loguru = "^0.7.0"

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
flake8 = "^6.0.0"
mypy = "^1.3.0"
pytest = "^7.3.0"
pytest-cov = "^4.0.0"
sphinx = "^7.0.0"
sphinx-rtd-theme = "^1.2.0"
pre-commit = "^3.3.0"

[tool.poetry.scripts]
train = "src.main:train_model"
serve = "src.main:serve_api"
inference = "src.main:run_inference"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_untyped_calls = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov=src --cov-report=term-missing --cov-report=html"
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.coverage.run]
source = ["src"]
omit = ["src/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]